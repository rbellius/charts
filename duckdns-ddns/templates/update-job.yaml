
apiVersion: batch/v1
kind: CronJob


metadata:
  name: duckdns-update-cronjob
  namespace: '{{ .Release.Namespace }}'
  annotations:
    argocd.argoproj.io/instance: duckdns-ddns
  labels:
    app.kubernetes.io/component: job
    app.kubernetes.io/instance:  duckdns-ddns
    app.kubernetes.io/name: duckdns-ddns-job
    app.kubernetes.io/part-of: duckdns-ddns


spec:

  # backoffLimit: 10
  # ttlSecondsAfterFinished: 3600
  startingDeadlineSeconds: 300
  concurrencyPolicy: Replace
  schedule: '{{ .Values.schedule }}'
  jobTemplate:
    metadata:
      labels:
        app: 'duckdns-update-cronjob'
    spec:
      template:
        spec:
          serviceAccountName: service-reader-sa
          restartPolicy: OnFailure
          containers:
          - name: 'kubectl-duckdns-update-container'
            image: 'ghcr.io/rbellius/kubectl:{{ .Values.kubectl.version }}'
            command: ["/bin/sh", "-c"]
            env:
            - name: DUCKDNS_TOKEN
              valueFrom:
                secretKeyRef:
                  name: '{{ .Values.secret.name }}'
                  key: '{{ .Values.secret.key }}'
            args:
              - |
                kubectl version
                echo "DUCKDNS TOKEN"
                echo $DUCKDNS_TOKEN
                echo "Getting the current public IP address of the k8s-gateway service"
                # kubectl -n kube-system get svc traefik -o jsonpath='{.status.loadBalancer.ingress[0].ip}'
                export GATEWAY_IP=$({{ .Values.getIpCommand}})
                yq -n '.duckdns.ip = env(GATEWAY_IP)' > gateway-ip.yaml
                
                echo "Gateway IP: ${GATEWAY_IP}"
                echo "Updating {{ .Values.domain }} @ DuckDNS with the current public IP address: ${GATEWAY_IP}"
                curl -s "https://www.duckdns.org/update/{{ .Values.domain }}/${DUCKDNS_TOKEN}/${GATEWAY_IP}?verbose=true"
